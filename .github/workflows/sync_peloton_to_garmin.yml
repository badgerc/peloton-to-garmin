name: Sync workflow

on:
  workflow_dispatch:
    inputs:
      saveLocalCopy:
        type: boolean
        default: false
  schedule:
    - cron: '1 12 * * *'  # Run at 12:00 PM UK Time All Year Round (or)
#    - cron: '0 12 * * *'  # Run at 12:00 PM UK Time During Winter (UTC)

jobs:
  sync:
    runs-on: ubuntu-latest
    container: 
      image: philosowaffle/peloton-to-garmin:console-stable
    steps:
    - name: Set env
      run: echo "OUTPUT_DIR=/app/output" >> $GITHUB_ENV
    - run: mkdir -p ${{ env.OUTPUT_DIR }}
    - name: Get today's date
      id: date
      run: echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV
    - name: Create config file
      run: |
        cat <<EOT > /app/configuration.local.json 
        {
          "App": {
            "EnablePolling": false
          },
          "Format": {
            "Fit": true,
            "Json": false,
            "Tcx": false,
            "SaveLocalCopy": ${{ github.event.inputs.saveLocalCopy || false }},
            "IncludeTimeInHRZones": false,
            "IncludeTimeInPowerZones": false
          },
          "Peloton": {
            "NumWorkoutsToDownload": 100,
            "ExcludeWorkoutTypes": ["Cycling", "Outdoor Cycling", "BikeBootcamp", "OutdoorRunning", "OutdoorWalking", "Cardio", "Circuit", "Strength", "Yoga", "Meditation"]
          },
          "Garmin": {
            "Upload": false,
            "FormatToUpload": "fit"
          },
          "Observability": {
            "Prometheus": {
              "Enabled": false
            },
            "Jaeger": {
              "Enabled": false
            },
            "Serilog": {
              "Using": ["Serilog.Sinks.Console"],
              "MinimumLevel": "Information"
            }
          }
        }
        EOT
    - name: Run sync (download only)
      run: /app/ConsoleClient
      if: ${{ env.P2G_PELOTON__EMAIL && env.P2G_PELOTON__PASSWORD && env.P2G_GARMIN__EMAIL && env.P2G_GARMIN__PASSWORD }}
      working-directory: /app
      env:
        P2G_PELOTON__EMAIL: ${{ secrets.P2G_PELOTON__EMAIL }}
        P2G_PELOTON__PASSWORD: ${{ secrets.P2G_PELOTON__PASSWORD }}
        P2G_GARMIN__EMAIL: ${{ secrets.P2G_GARMIN__EMAIL }}
        P2G_GARMIN__PASSWORD: ${{ secrets.P2G_GARMIN__PASSWORD }}
        TZ: Europe/London

    - name: Debug: List files in output directory
      run: |
        echo "Listing files in /app/output/"
        ls -l /app/output/

    - name: Debug: Print environment variables
      run: |
        echo "OUTPUT_DIR is $OUTPUT_DIR"
        echo "TODAY is $TODAY"

    - name: Upload today's workouts
      shell: bash
      run: |
        shopt -s nullglob
        echo "Today's date is $TODAY"
        for file in /app/output/*.fit; do
          echo "Processing file: $file"
          file_date=$(date -r "$file" +'%Y-%m-%d')
          echo "File date is $file_date"
          if [[ "$file_date" == "$TODAY" ]]; then
            echo "Uploading $file to Garmin"
            /app/ConsoleClient --upload "$file"
          else
            echo "Skipping $file (not from today)"
          fi
        done
      env:
        TODAY: ${{ env.TODAY }}

    - name: Archive files
      if: ${{ github.event.inputs.saveLocalCopy == 'true' }}
      run: |
        apt-get update
        apt-get install -y zip
        zip -r -j output.zip ${{ env.OUTPUT_DIR }}

    - uses: actions/upload-artifact@v3
      if: ${{ github.event.inputs.saveLocalCopy == 'true' }}
      with:
        name: output
        path: output.zip
        if-no-files-found: error
